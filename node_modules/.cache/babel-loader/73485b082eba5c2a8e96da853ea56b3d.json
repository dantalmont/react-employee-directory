{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Desktop/react-employee-directory/my-react-app/src/components/Sort/index.js\";\nimport React, { Component, version } from \"react\";\nimport { Col, Row, Container } from \"../Grid\";\nimport Card from \"../Card\"; //import { Button, Input, Footer};\n\nimport directoryCatalog from \"./directoryCatalog.json\";\nimport directory from \"../Directory\";\n\nclass Sort extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sort: \"asc\",\n      directoryCatalog: [...directoryCatalog]\n    };\n\n    this.renderEmployee = () => {\n      const {\n        directoryCatalog\n      } = this.state;\n      return directoryCatalog.map((employee, index) => /*#__PURE__*/React.createElement(Card, {\n        key: index,\n        name: employee.name,\n        title: employee.title,\n        phone: employee.phone,\n        email: employee.email,\n        duration: employee.eDuration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.onSort = sortType => {\n      this.setState({\n        sortType\n      });\n    };\n  }\n\n  render() {\n    const {\n      directoryCatalog,\n      sortType\n    } = this.state;\n    const sorted = directoryCatalog.sort((a, b) => {\n      const isReversed = sortType === \"asc\" ? 1 : -1;\n      return isReversed * a.name.localeCompare(b.name);\n    });\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }, this.renderEmployee());\n  }\n\n}\n\nexport default Sort;","map":{"version":3,"sources":["/Users/danny/Desktop/react-employee-directory/my-react-app/src/components/Sort/index.js"],"names":["React","Component","version","Col","Row","Container","Card","directoryCatalog","directory","Sort","state","sort","renderEmployee","map","employee","index","name","title","phone","email","eDuration","onSort","sortType","setState","render","sorted","a","b","isReversed","localeCompare"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,SAApC;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBS,KAFyB,GAEjB;AACJC,MAAAA,IAAI,EAAG,KADH;AAEJJ,MAAAA,gBAAgB,EAAG,CAAC,GAAGA,gBAAJ;AAFf,KAFiB;;AAAA,SAOzBK,cAPyB,GAOR,MAAM;AACnB,YAAM;AAAEL,QAAAA;AAAF,UAAuB,KAAKG,KAAlC;AACA,aAAOH,gBAAgB,CAACM,GAAjB,CAAsB,CAACC,QAAD,EAAWC,KAAX,kBAC7B,oBAAC,IAAD;AACI,QAAA,GAAG,EAAGA,KADV;AAEI,QAAA,IAAI,EAAID,QAAQ,CAACE,IAFrB;AAGI,QAAA,KAAK,EAAIF,QAAQ,CAACG,KAHtB;AAII,QAAA,KAAK,EAAIH,QAAQ,CAACI,KAJtB;AAKI,QAAA,KAAK,EAAIJ,QAAQ,CAACK,KALtB;AAMI,QAAA,QAAQ,EAAIL,QAAQ,CAACM,SANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,CAAP;AAUH,KAnBwB;;AAAA,SAqBzBC,MArByB,GAqBhBC,QAAQ,IAAG;AAChB,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AACH,KAvBwB;AAAA;;AAwBzBE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACjB,MAAAA,gBAAD;AAAmBe,MAAAA;AAAnB,QAA+B,KAAKZ,KAA1C;AAEA,UAAMe,MAAM,GAAGlB,gBAAgB,CAACI,IAAjB,CAAuB,CAACe,CAAD,EAAIC,CAAJ,KAAS;AAE3C,YAAMC,UAAU,GAAIN,QAAQ,KAAK,KAAd,GAAuB,CAAvB,GAA2B,CAAC,CAA/C;AACA,aAAOM,UAAU,GAAGF,CAAC,CAACV,IAAF,CAAOa,aAAP,CAAqBF,CAAC,CAACX,IAAvB,CAApB;AACH,KAJc,CAAf;AAMA,wBACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,cAAL,EADL,CADH;AAKH;;AAtCwB;;AA0C7B,eAAeH,IAAf","sourcesContent":["import React, { Component, version } from  \"react\";\nimport { Col, Row, Container } from \"../Grid\";\nimport Card from \"../Card\";\n\n//import { Button, Input, Footer};\nimport directoryCatalog from \"./directoryCatalog.json\";\nimport directory from \"../Directory\";\n\nclass Sort extends Component {\n    \n    state = {\n        sort : \"asc\",\n        directoryCatalog : [...directoryCatalog]\n    }\n\n    renderEmployee = () => {\n        const { directoryCatalog } = this.state;\n        return directoryCatalog.map( (employee, index)=>\n        <Card\n            key ={index}\n            name = {employee.name}\n            title = {employee.title}\n            phone = {employee.phone}\n            email = {employee.email}\n            duration = {employee.eDuration}\n        />\n        );\n    }\n\n    onSort = sortType =>{\n        this.setState({sortType});\n    }\n    render() {\n        const {directoryCatalog, sortType} = this.state;\n\n        const sorted = directoryCatalog.sort( (a, b) =>{\n\n            const isReversed = (sortType === \"asc\") ? 1 : -1;\n            return isReversed * a.name.localeCompare(b.name)\n        });\n\n        return (\n           <Row>\n               {this.renderEmployee()}\n           </Row>\n        );\n    }\n\n}\n\nexport default Sort;\n\n"]},"metadata":{},"sourceType":"module"}