{"ast":null,"code":"import React from \"react\";\nimport Card from \"../Card\";\nimport { Col, Row, Container } from \"../Grid\";\n\nconst ProductTable = props => {\n  const products = [{\n    id: 1,\n    name: 'Cheese',\n    price: 4.9,\n    stock: 20\n  }, {\n    id: 2,\n    name: 'Milk',\n    price: 1.9,\n    stock: 32\n  }, {\n    id: 3,\n    name: 'Yoghurt',\n    price: 2.4,\n    stock: 12\n  }, {\n    id: 4,\n    name: 'Heavy Cream',\n    price: 3.9,\n    stock: 9\n  }, {\n    id: 5,\n    name: 'Butter',\n    price: 0.9,\n    stock: 99\n  }, {\n    id: 6,\n    name: 'Sour Cream ',\n    price: 2.9,\n    stock: 86\n  }, {\n    id: 7,\n    name: 'Fancy French Cheese ðŸ‡«ðŸ‡·',\n    price: 99,\n    stock: 12\n  }];\n\n  const useSortableData = (items, config = null) => {\n    const [sortConfig, setSortConfig] = React.useState(config);\n    const sortedItems = React.useMemo(() => {\n      let sortableItems = [...items];\n\n      if (sortConfig !== null) {\n        sortableItems.sort((a, b) => {\n          if (a[sortConfig.key] < b[sortConfig.key]) {\n            return sortConfig.direction === 'ascending' ? -1 : 1;\n          }\n\n          if (a[sortConfig.key] > b[sortConfig.key]) {\n            return sortConfig.direction === 'ascending' ? 1 : -1;\n          }\n\n          return 0;\n        });\n      }\n\n      return sortableItems;\n    }, [items, sortConfig]);\n\n    const requestSort = key => {\n      let direction = 'ascending';\n\n      if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n        direction = 'descending';\n      }\n\n      setSortConfig({\n        key,\n        direction\n      });\n    };\n\n    return {\n      items: sortedItems,\n      requestSort,\n      sortConfig\n    };\n  };\n\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSortableData(props.products);\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n};\n\nexport default EmployeeInfo;","map":{"version":3,"sources":["/Users/danny/Desktop/react-employee-directory/my-react-app/src/components/EmployeeInfo/index.js"],"names":["React","Card","Col","Row","Container","ProductTable","props","products","id","name","price","stock","useSortableData","items","config","sortConfig","setSortConfig","useState","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","getClassNamesFor","undefined","EmployeeInfo"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport Card from \"../Card\";\nimport { Col, Row, Container } from \"../Grid\";\n\nconst ProductTable = (props) => {\n    const products= [\n        { id: 1, name: 'Cheese', price: 4.9, stock: 20 },\n        { id: 2, name: 'Milk', price: 1.9, stock: 32 },\n        { id: 3, name: 'Yoghurt', price: 2.4, stock: 12 },\n        { id: 4, name: 'Heavy Cream', price: 3.9, stock: 9 },\n        { id: 5, name: 'Butter', price: 0.9, stock: 99 },\n        { id: 6, name: 'Sour Cream ', price: 2.9, stock: 86 },\n        { id: 7, name: 'Fancy French Cheese ðŸ‡«ðŸ‡·', price: 99, stock: 12 },\n      ];\n\n      const useSortableData = (items, config = null) => {\n        const [sortConfig, setSortConfig] = React.useState(config);\n      \n        const sortedItems = React.useMemo(() => {\n          let sortableItems = [...items];\n          if (sortConfig !== null) {\n            sortableItems.sort((a, b) => {\n              if (a[sortConfig.key] < b[sortConfig.key]) {\n                return sortConfig.direction === 'ascending' ? -1 : 1;\n              }\n              if (a[sortConfig.key] > b[sortConfig.key]) {\n                return sortConfig.direction === 'ascending' ? 1 : -1;\n              }\n              return 0;\n            });\n          }\n          return sortableItems;\n        }, [items, sortConfig]);\n      \n        const requestSort = (key) => {\n          let direction = 'ascending';\n          if (\n            sortConfig &&\n            sortConfig.key === key &&\n            sortConfig.direction === 'ascending'\n          ) {\n            direction = 'descending';\n          }\n          setSortConfig({ key, direction });\n        };\n      \n        return { items: sortedItems, requestSort, sortConfig };\n      };  \n\n    const { items, requestSort, sortConfig } = useSortableData(props.products);\n\n    const getClassNamesFor = (name) => {\n      if (!sortConfig) {\n        return;\n      }\n      return sortConfig.key === name ? sortConfig.direction : undefined;\n    };\n}\n\nexport default EmployeeInfo;"]},"metadata":{},"sourceType":"module"}