{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Desktop/react-employee-directory/my-react-app/src/components/CardSortTest/index.js\";\nimport React from 'react';\nimport './styles.css';\nimport useSortableData from \"./components/useSortableData\";\n\nconst ProductTable = props => {\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSortableData(props.products);\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => requestSort('name'),\n    className: getClassNamesFor('name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => requestSort('price'),\n    className: getClassNamesFor('price'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, \"Price\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => requestSort('stock'),\n    className: getClassNamesFor('stock'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"In Stock\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"$\", item.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, item.stock)))));\n};\n\nexport default function CardSortTest() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProductTable, {\n    products: [{\n      id: 1,\n      name: 'Cheese',\n      price: 4.9,\n      stock: 20\n    }, {\n      id: 2,\n      name: 'Milk',\n      price: 1.9,\n      stock: 32\n    }, {\n      id: 3,\n      name: 'Yoghurt',\n      price: 2.4,\n      stock: 12\n    }, {\n      id: 4,\n      name: 'Heavy Cream',\n      price: 3.9,\n      stock: 9\n    }, {\n      id: 5,\n      name: 'Butter',\n      price: 0.9,\n      stock: 99\n    }, {\n      id: 6,\n      name: 'Sour Cream ',\n      price: 2.9,\n      stock: 86\n    }, {\n      id: 7,\n      name: 'Fancy French Cheese ðŸ‡«ðŸ‡·',\n      price: 99,\n      stock: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/danny/Desktop/react-employee-directory/my-react-app/src/components/CardSortTest/index.js"],"names":["React","useSortableData","ProductTable","props","items","requestSort","sortConfig","products","getClassNamesFor","name","key","direction","undefined","map","item","id","price","stock","CardSortTest"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles.css';\nimport useSortableData from \"./components/useSortableData\";\n\nconst ProductTable = (props) => {\n    const { items, requestSort, sortConfig } = useSortableData(props.products);\n    const getClassNamesFor = (name) => {\n      if (!sortConfig) {\n        return;\n      }\n      return sortConfig.key === name ? sortConfig.direction : undefined;\n    };\n    return (\n      <table>\n        <caption>Products</caption>\n        <thead>\n          <tr>\n            <th>\n              <button\n                type=\"button\"\n                onClick={() => requestSort('name')}\n                className={getClassNamesFor('name')}\n              >\n                Name\n              </button>\n            </th>\n            <th>\n              <button\n                type=\"button\"\n                onClick={() => requestSort('price')}\n                className={getClassNamesFor('price')}\n              >\n                Price\n              </button>\n            </th>\n            <th>\n              <button\n                type=\"button\"\n                onClick={() => requestSort('stock')}\n                className={getClassNamesFor('stock')}\n              >\n                In Stock\n              </button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item.name}</td>\n              <td>${item.price}</td>\n              <td>{item.stock}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n  \n  export default function CardSortTest() {\n    return (\n      <div className=\"App\">\n        <ProductTable\n          products={[\n            { id: 1, name: 'Cheese', price: 4.9, stock: 20 },\n            { id: 2, name: 'Milk', price: 1.9, stock: 32 },\n            { id: 3, name: 'Yoghurt', price: 2.4, stock: 12 },\n            { id: 4, name: 'Heavy Cream', price: 3.9, stock: 9 },\n            { id: 5, name: 'Butter', price: 0.9, stock: 99 },\n            { id: 6, name: 'Sour Cream ', price: 2.9, stock: 86 },\n            { id: 7, name: 'Fancy French Cheese ðŸ‡«ðŸ‡·', price: 99, stock: 12 },\n          ]}\n        />\n      </div>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}